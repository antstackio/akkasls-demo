// source: akkaserverless/component/replicatedentity/replicated_entity.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var akkaserverless_component_component_pb = require('../../../akkaserverless/component/component_pb.js');
goog.object.extend(proto, akkaserverless_component_component_pb);
var akkaserverless_component_entity_entity_pb = require('../../../akkaserverless/component/entity/entity_pb.js');
goog.object.extend(proto, akkaserverless_component_entity_entity_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.FlagDelta', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.GCounterDelta', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.GSetDelta', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.LWWRegisterDelta', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ORMapDelta', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ORMapEntryDelta', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ORSetDelta', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.PNCounterDelta', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityClock', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.DeltaCase', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.ActionCase', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.MessageCase', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.MessageCase', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.ReplicatedEntityWriteConsistency', null, global);
goog.exportSymbol('proto.akkaserverless.component.replicatedentity.VoteDelta', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.oneofGroups_);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.displayName = 'proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.oneofGroups_);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.displayName = 'proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.displayName = 'proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.GCounterDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.GCounterDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.GCounterDelta.displayName = 'proto.akkaserverless.component.replicatedentity.GCounterDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.PNCounterDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.PNCounterDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.PNCounterDelta.displayName = 'proto.akkaserverless.component.replicatedentity.PNCounterDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.GSetDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.akkaserverless.component.replicatedentity.GSetDelta.repeatedFields_, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.GSetDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.GSetDelta.displayName = 'proto.akkaserverless.component.replicatedentity.GSetDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.akkaserverless.component.replicatedentity.ORSetDelta.repeatedFields_, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ORSetDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ORSetDelta.displayName = 'proto.akkaserverless.component.replicatedentity.ORSetDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.LWWRegisterDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.displayName = 'proto.akkaserverless.component.replicatedentity.LWWRegisterDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.FlagDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.FlagDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.FlagDelta.displayName = 'proto.akkaserverless.component.replicatedentity.FlagDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.akkaserverless.component.replicatedentity.ORMapDelta.repeatedFields_, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ORMapDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ORMapDelta.displayName = 'proto.akkaserverless.component.replicatedentity.ORMapDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ORMapEntryDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.displayName = 'proto.akkaserverless.component.replicatedentity.ORMapEntryDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.VoteDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.VoteDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.VoteDelta.displayName = 'proto.akkaserverless.component.replicatedentity.VoteDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.displayName = 'proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.displayName = 'proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.repeatedFields_, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.displayName = 'proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.oneofGroups_);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.displayName = 'proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.repeatedFields_, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.displayName = 'proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.repeatedFields_, null);
};
goog.inherits(proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.displayName = 'proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.MessageCase = {
  MESSAGE_NOT_SET: 0,
  INIT: 1,
  DELTA: 2,
  DELETE: 3,
  COMMAND: 4,
  STREAM_CANCELLED: 5
};

/**
 * @return {proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.MessageCase}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.getMessageCase = function() {
  return /** @type {proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.MessageCase} */(jspb.Message.computeOneofCase(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.toObject = function(includeInstance, msg) {
  var f, obj = {
    init: (f = msg.getInit()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.toObject(includeInstance, f),
    delta: (f = msg.getDelta()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.toObject(includeInstance, f),
    pb_delete: (f = msg.getDelete()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.toObject(includeInstance, f),
    command: (f = msg.getCommand()) && akkaserverless_component_entity_entity_pb.Command.toObject(includeInstance, f),
    streamCancelled: (f = msg.getStreamCancelled()) && akkaserverless_component_component_pb.StreamCancelled.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn;
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.deserializeBinaryFromReader);
      msg.setInit(value);
      break;
    case 2:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.deserializeBinaryFromReader);
      msg.setDelta(value);
      break;
    case 3:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.deserializeBinaryFromReader);
      msg.setDelete(value);
      break;
    case 4:
      var value = new akkaserverless_component_entity_entity_pb.Command;
      reader.readMessage(value,akkaserverless_component_entity_entity_pb.Command.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    case 5:
      var value = new akkaserverless_component_component_pb.StreamCancelled;
      reader.readMessage(value,akkaserverless_component_component_pb.StreamCancelled.deserializeBinaryFromReader);
      msg.setStreamCancelled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.serializeBinaryToWriter
    );
  }
  f = message.getDelta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.serializeBinaryToWriter
    );
  }
  f = message.getDelete();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.serializeBinaryToWriter
    );
  }
  f = message.getCommand();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      akkaserverless_component_entity_entity_pb.Command.serializeBinaryToWriter
    );
  }
  f = message.getStreamCancelled();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      akkaserverless_component_component_pb.StreamCancelled.serializeBinaryToWriter
    );
  }
};


/**
 * optional ReplicatedEntityInit init = 1;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.getInit = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit, 1));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.setInit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.clearInit = function() {
  return this.setInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.hasInit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ReplicatedEntityDelta delta = 2;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.getDelta = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta, 2));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.setDelta = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.clearDelta = function() {
  return this.setDelta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.hasDelta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ReplicatedEntityDelete delete = 3;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.getDelete = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete, 3));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.setDelete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.clearDelete = function() {
  return this.setDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.hasDelete = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional akkaserverless.component.entity.Command command = 4;
 * @return {?proto.akkaserverless.component.entity.Command}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.getCommand = function() {
  return /** @type{?proto.akkaserverless.component.entity.Command} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_entity_entity_pb.Command, 4));
};


/**
 * @param {?proto.akkaserverless.component.entity.Command|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.setCommand = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.clearCommand = function() {
  return this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional akkaserverless.component.StreamCancelled stream_cancelled = 5;
 * @return {?proto.akkaserverless.component.StreamCancelled}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.getStreamCancelled = function() {
  return /** @type{?proto.akkaserverless.component.StreamCancelled} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_component_pb.StreamCancelled, 5));
};


/**
 * @param {?proto.akkaserverless.component.StreamCancelled|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.setStreamCancelled = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.clearStreamCancelled = function() {
  return this.setStreamCancelled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.prototype.hasStreamCancelled = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.MessageCase = {
  MESSAGE_NOT_SET: 0,
  REPLY: 1,
  STREAMED_MESSAGE: 2,
  STREAM_CANCELLED_RESPONSE: 3,
  FAILURE: 4
};

/**
 * @return {proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.MessageCase}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.getMessageCase = function() {
  return /** @type {proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.MessageCase} */(jspb.Message.computeOneofCase(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    reply: (f = msg.getReply()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.toObject(includeInstance, f),
    streamedMessage: (f = msg.getStreamedMessage()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.toObject(includeInstance, f),
    streamCancelledResponse: (f = msg.getStreamCancelledResponse()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.toObject(includeInstance, f),
    failure: (f = msg.getFailure()) && akkaserverless_component_component_pb.Failure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut;
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.deserializeBinaryFromReader);
      msg.setReply(value);
      break;
    case 2:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.deserializeBinaryFromReader);
      msg.setStreamedMessage(value);
      break;
    case 3:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.deserializeBinaryFromReader);
      msg.setStreamCancelledResponse(value);
      break;
    case 4:
      var value = new akkaserverless_component_component_pb.Failure;
      reader.readMessage(value,akkaserverless_component_component_pb.Failure.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReply();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.serializeBinaryToWriter
    );
  }
  f = message.getStreamedMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.serializeBinaryToWriter
    );
  }
  f = message.getStreamCancelledResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.serializeBinaryToWriter
    );
  }
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      akkaserverless_component_component_pb.Failure.serializeBinaryToWriter
    );
  }
};


/**
 * optional ReplicatedEntityReply reply = 1;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.getReply = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply, 1));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.setReply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.clearReply = function() {
  return this.setReply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.hasReply = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ReplicatedEntityStreamedMessage streamed_message = 2;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.getStreamedMessage = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage, 2));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.setStreamedMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.clearStreamedMessage = function() {
  return this.setStreamedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.hasStreamedMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ReplicatedEntityStreamCancelledResponse stream_cancelled_response = 3;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.getStreamCancelledResponse = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse, 3));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.setStreamCancelledResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.clearStreamCancelledResponse = function() {
  return this.setStreamCancelledResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.hasStreamCancelledResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional akkaserverless.component.Failure failure = 4;
 * @return {?proto.akkaserverless.component.Failure}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.getFailure = function() {
  return /** @type{?proto.akkaserverless.component.Failure} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_component_pb.Failure, 4));
};


/**
 * @param {?proto.akkaserverless.component.Failure|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.setFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.clearFailure = function() {
  return this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.DeltaCase = {
  DELTA_NOT_SET: 0,
  GCOUNTER: 1,
  PNCOUNTER: 2,
  GSET: 3,
  ORSET: 4,
  LWWREGISTER: 5,
  FLAG: 6,
  ORMAP: 7,
  VOTE: 8
};

/**
 * @return {proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.DeltaCase}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.getDeltaCase = function() {
  return /** @type {proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.DeltaCase} */(jspb.Message.computeOneofCase(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    gcounter: (f = msg.getGcounter()) && proto.akkaserverless.component.replicatedentity.GCounterDelta.toObject(includeInstance, f),
    pncounter: (f = msg.getPncounter()) && proto.akkaserverless.component.replicatedentity.PNCounterDelta.toObject(includeInstance, f),
    gset: (f = msg.getGset()) && proto.akkaserverless.component.replicatedentity.GSetDelta.toObject(includeInstance, f),
    orset: (f = msg.getOrset()) && proto.akkaserverless.component.replicatedentity.ORSetDelta.toObject(includeInstance, f),
    lwwregister: (f = msg.getLwwregister()) && proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.toObject(includeInstance, f),
    flag: (f = msg.getFlag()) && proto.akkaserverless.component.replicatedentity.FlagDelta.toObject(includeInstance, f),
    ormap: (f = msg.getOrmap()) && proto.akkaserverless.component.replicatedentity.ORMapDelta.toObject(includeInstance, f),
    vote: (f = msg.getVote()) && proto.akkaserverless.component.replicatedentity.VoteDelta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta;
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akkaserverless.component.replicatedentity.GCounterDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.GCounterDelta.deserializeBinaryFromReader);
      msg.setGcounter(value);
      break;
    case 2:
      var value = new proto.akkaserverless.component.replicatedentity.PNCounterDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.PNCounterDelta.deserializeBinaryFromReader);
      msg.setPncounter(value);
      break;
    case 3:
      var value = new proto.akkaserverless.component.replicatedentity.GSetDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.GSetDelta.deserializeBinaryFromReader);
      msg.setGset(value);
      break;
    case 4:
      var value = new proto.akkaserverless.component.replicatedentity.ORSetDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ORSetDelta.deserializeBinaryFromReader);
      msg.setOrset(value);
      break;
    case 5:
      var value = new proto.akkaserverless.component.replicatedentity.LWWRegisterDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.deserializeBinaryFromReader);
      msg.setLwwregister(value);
      break;
    case 6:
      var value = new proto.akkaserverless.component.replicatedentity.FlagDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.FlagDelta.deserializeBinaryFromReader);
      msg.setFlag(value);
      break;
    case 7:
      var value = new proto.akkaserverless.component.replicatedentity.ORMapDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ORMapDelta.deserializeBinaryFromReader);
      msg.setOrmap(value);
      break;
    case 8:
      var value = new proto.akkaserverless.component.replicatedentity.VoteDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.VoteDelta.deserializeBinaryFromReader);
      msg.setVote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGcounter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akkaserverless.component.replicatedentity.GCounterDelta.serializeBinaryToWriter
    );
  }
  f = message.getPncounter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.akkaserverless.component.replicatedentity.PNCounterDelta.serializeBinaryToWriter
    );
  }
  f = message.getGset();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.akkaserverless.component.replicatedentity.GSetDelta.serializeBinaryToWriter
    );
  }
  f = message.getOrset();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.akkaserverless.component.replicatedentity.ORSetDelta.serializeBinaryToWriter
    );
  }
  f = message.getLwwregister();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.serializeBinaryToWriter
    );
  }
  f = message.getFlag();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.akkaserverless.component.replicatedentity.FlagDelta.serializeBinaryToWriter
    );
  }
  f = message.getOrmap();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.akkaserverless.component.replicatedentity.ORMapDelta.serializeBinaryToWriter
    );
  }
  f = message.getVote();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.akkaserverless.component.replicatedentity.VoteDelta.serializeBinaryToWriter
    );
  }
};


/**
 * optional GCounterDelta gcounter = 1;
 * @return {?proto.akkaserverless.component.replicatedentity.GCounterDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.getGcounter = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.GCounterDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.GCounterDelta, 1));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.GCounterDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.setGcounter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.clearGcounter = function() {
  return this.setGcounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.hasGcounter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PNCounterDelta pncounter = 2;
 * @return {?proto.akkaserverless.component.replicatedentity.PNCounterDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.getPncounter = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.PNCounterDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.PNCounterDelta, 2));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.PNCounterDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.setPncounter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.clearPncounter = function() {
  return this.setPncounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.hasPncounter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GSetDelta gset = 3;
 * @return {?proto.akkaserverless.component.replicatedentity.GSetDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.getGset = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.GSetDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.GSetDelta, 3));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.GSetDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.setGset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.clearGset = function() {
  return this.setGset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.hasGset = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ORSetDelta orset = 4;
 * @return {?proto.akkaserverless.component.replicatedentity.ORSetDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.getOrset = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ORSetDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ORSetDelta, 4));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ORSetDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.setOrset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.clearOrset = function() {
  return this.setOrset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.hasOrset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LWWRegisterDelta lwwregister = 5;
 * @return {?proto.akkaserverless.component.replicatedentity.LWWRegisterDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.getLwwregister = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.LWWRegisterDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.LWWRegisterDelta, 5));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.LWWRegisterDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.setLwwregister = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.clearLwwregister = function() {
  return this.setLwwregister(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.hasLwwregister = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional FlagDelta flag = 6;
 * @return {?proto.akkaserverless.component.replicatedentity.FlagDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.getFlag = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.FlagDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.FlagDelta, 6));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.FlagDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.setFlag = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.clearFlag = function() {
  return this.setFlag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.hasFlag = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ORMapDelta ormap = 7;
 * @return {?proto.akkaserverless.component.replicatedentity.ORMapDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.getOrmap = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ORMapDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ORMapDelta, 7));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ORMapDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.setOrmap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.clearOrmap = function() {
  return this.setOrmap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.hasOrmap = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional VoteDelta vote = 8;
 * @return {?proto.akkaserverless.component.replicatedentity.VoteDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.getVote = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.VoteDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.VoteDelta, 8));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.VoteDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.setVote = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.clearVote = function() {
  return this.setVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.prototype.hasVote = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.GCounterDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.GCounterDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.GCounterDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.GCounterDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    increment: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.GCounterDelta}
 */
proto.akkaserverless.component.replicatedentity.GCounterDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.GCounterDelta;
  return proto.akkaserverless.component.replicatedentity.GCounterDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.GCounterDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.GCounterDelta}
 */
proto.akkaserverless.component.replicatedentity.GCounterDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIncrement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.GCounterDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.GCounterDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.GCounterDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.GCounterDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIncrement();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 increment = 1;
 * @return {number}
 */
proto.akkaserverless.component.replicatedentity.GCounterDelta.prototype.getIncrement = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.akkaserverless.component.replicatedentity.GCounterDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.GCounterDelta.prototype.setIncrement = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.PNCounterDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.PNCounterDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.PNCounterDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.PNCounterDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    change: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.PNCounterDelta}
 */
proto.akkaserverless.component.replicatedentity.PNCounterDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.PNCounterDelta;
  return proto.akkaserverless.component.replicatedentity.PNCounterDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.PNCounterDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.PNCounterDelta}
 */
proto.akkaserverless.component.replicatedentity.PNCounterDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setChange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.PNCounterDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.PNCounterDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.PNCounterDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.PNCounterDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChange();
  if (f !== 0) {
    writer.writeSint64(
      1,
      f
    );
  }
};


/**
 * optional sint64 change = 1;
 * @return {number}
 */
proto.akkaserverless.component.replicatedentity.PNCounterDelta.prototype.getChange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.akkaserverless.component.replicatedentity.PNCounterDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.PNCounterDelta.prototype.setChange = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.akkaserverless.component.replicatedentity.GSetDelta.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.GSetDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.GSetDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.GSetDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.GSetDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    addedList: jspb.Message.toObjectList(msg.getAddedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.GSetDelta}
 */
proto.akkaserverless.component.replicatedentity.GSetDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.GSetDelta;
  return proto.akkaserverless.component.replicatedentity.GSetDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.GSetDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.GSetDelta}
 */
proto.akkaserverless.component.replicatedentity.GSetDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addAdded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.GSetDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.GSetDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.GSetDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.GSetDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * repeated google.protobuf.Any added = 1;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.akkaserverless.component.replicatedentity.GSetDelta.prototype.getAddedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.akkaserverless.component.replicatedentity.GSetDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.GSetDelta.prototype.setAddedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.akkaserverless.component.replicatedentity.GSetDelta.prototype.addAdded = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.replicatedentity.GSetDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.GSetDelta.prototype.clearAddedList = function() {
  return this.setAddedList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ORSetDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ORSetDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleared: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    removedList: jspb.Message.toObjectList(msg.getRemovedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    addedList: jspb.Message.toObjectList(msg.getAddedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ORSetDelta}
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ORSetDelta;
  return proto.akkaserverless.component.replicatedentity.ORSetDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ORSetDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ORSetDelta}
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleared(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addRemoved(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addAdded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ORSetDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ORSetDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleared();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRemovedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getAddedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool cleared = 1;
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.getCleared = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.akkaserverless.component.replicatedentity.ORSetDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.setCleared = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated google.protobuf.Any removed = 2;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.getRemovedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.akkaserverless.component.replicatedentity.ORSetDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.setRemovedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.addRemoved = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.replicatedentity.ORSetDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.clearRemovedList = function() {
  return this.setRemovedList([]);
};


/**
 * repeated google.protobuf.Any added = 3;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.getAddedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.akkaserverless.component.replicatedentity.ORSetDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.setAddedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.addAdded = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.replicatedentity.ORSetDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ORSetDelta.prototype.clearAddedList = function() {
  return this.setAddedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.LWWRegisterDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    clock: jspb.Message.getFieldWithDefault(msg, 2, 0),
    customClockValue: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.LWWRegisterDelta}
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.LWWRegisterDelta;
  return proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.LWWRegisterDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.LWWRegisterDelta}
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityClock} */ (reader.readEnum());
      msg.setClock(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomClockValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.LWWRegisterDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getClock();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCustomClockValue();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.Any value = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.LWWRegisterDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.LWWRegisterDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ReplicatedEntityClock clock = 2;
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityClock}
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.prototype.getClock = function() {
  return /** @type {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityClock} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityClock} value
 * @return {!proto.akkaserverless.component.replicatedentity.LWWRegisterDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.prototype.setClock = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 custom_clock_value = 3;
 * @return {number}
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.prototype.getCustomClockValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.akkaserverless.component.replicatedentity.LWWRegisterDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.LWWRegisterDelta.prototype.setCustomClockValue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.FlagDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.FlagDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.FlagDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.FlagDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.FlagDelta}
 */
proto.akkaserverless.component.replicatedentity.FlagDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.FlagDelta;
  return proto.akkaserverless.component.replicatedentity.FlagDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.FlagDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.FlagDelta}
 */
proto.akkaserverless.component.replicatedentity.FlagDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.FlagDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.FlagDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.FlagDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.FlagDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool value = 1;
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.FlagDelta.prototype.getValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.akkaserverless.component.replicatedentity.FlagDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.FlagDelta.prototype.setValue = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ORMapDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ORMapDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleared: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    removedList: jspb.Message.toObjectList(msg.getRemovedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    updatedList: jspb.Message.toObjectList(msg.getUpdatedList(),
    proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.toObject, includeInstance),
    addedList: jspb.Message.toObjectList(msg.getAddedList(),
    proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapDelta}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ORMapDelta;
  return proto.akkaserverless.component.replicatedentity.ORMapDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ORMapDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapDelta}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleared(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addRemoved(value);
      break;
    case 3:
      var value = new proto.akkaserverless.component.replicatedentity.ORMapEntryDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.deserializeBinaryFromReader);
      msg.addUpdated(value);
      break;
    case 4:
      var value = new proto.akkaserverless.component.replicatedentity.ORMapEntryDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.deserializeBinaryFromReader);
      msg.addAdded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ORMapDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ORMapDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleared();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRemovedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.serializeBinaryToWriter
    );
  }
  f = message.getAddedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool cleared = 1;
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.getCleared = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.setCleared = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated google.protobuf.Any removed = 2;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.getRemovedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.setRemovedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.addRemoved = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.clearRemovedList = function() {
  return this.setRemovedList([]);
};


/**
 * repeated ORMapEntryDelta updated = 3;
 * @return {!Array<!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta>}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.getUpdatedList = function() {
  return /** @type{!Array<!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.akkaserverless.component.replicatedentity.ORMapEntryDelta, 3));
};


/**
 * @param {!Array<!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta>} value
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.setUpdatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.addUpdated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.akkaserverless.component.replicatedentity.ORMapEntryDelta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.clearUpdatedList = function() {
  return this.setUpdatedList([]);
};


/**
 * repeated ORMapEntryDelta added = 4;
 * @return {!Array<!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta>}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.getAddedList = function() {
  return /** @type{!Array<!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.akkaserverless.component.replicatedentity.ORMapEntryDelta, 4));
};


/**
 * @param {!Array<!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta>} value
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.setAddedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta}
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.addAdded = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.akkaserverless.component.replicatedentity.ORMapEntryDelta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ORMapDelta.prototype.clearAddedList = function() {
  return this.setAddedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    delta: (f = msg.getDelta()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta}
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ORMapEntryDelta;
  return proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta}
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.deserializeBinaryFromReader);
      msg.setDelta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getDelta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any key = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.prototype.getKey = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ReplicatedEntityDelta delta = 2;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta}
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.prototype.getDelta = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta, 2));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta} returns this
*/
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.prototype.setDelta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ORMapEntryDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.prototype.clearDelta = function() {
  return this.setDelta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ORMapEntryDelta.prototype.hasDelta = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.VoteDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.VoteDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    selfVote: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    votesFor: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalVoters: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.VoteDelta}
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.VoteDelta;
  return proto.akkaserverless.component.replicatedentity.VoteDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.VoteDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.VoteDelta}
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSelfVote(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVotesFor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalVoters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.VoteDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.VoteDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelfVote();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getVotesFor();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotalVoters();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional bool self_vote = 1;
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.prototype.getSelfVote = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.akkaserverless.component.replicatedentity.VoteDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.prototype.setSelfVote = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 votes_for = 2;
 * @return {number}
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.prototype.getVotesFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.akkaserverless.component.replicatedentity.VoteDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.prototype.setVotesFor = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 total_voters = 3;
 * @return {number}
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.prototype.getTotalVoters = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.akkaserverless.component.replicatedentity.VoteDelta} returns this
 */
proto.akkaserverless.component.replicatedentity.VoteDelta.prototype.setTotalVoters = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entityId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    delta: (f = msg.getDelta()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit;
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityId(value);
      break;
    case 3:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.deserializeBinaryFromReader);
      msg.setDelta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntityId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDelta();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.serializeBinaryToWriter
    );
  }
};


/**
 * optional string service_name = 1;
 * @return {string}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.prototype.setServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string entity_id = 2;
 * @return {string}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.prototype.getEntityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ReplicatedEntityDelta delta = 3;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.prototype.getDelta = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta, 3));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.prototype.setDelta = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.prototype.clearDelta = function() {
  return this.setDelta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityInit.prototype.hasDelta = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete;
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    clientAction: (f = msg.getClientAction()) && akkaserverless_component_component_pb.ClientAction.toObject(includeInstance, f),
    sideEffectsList: jspb.Message.toObjectList(msg.getSideEffectsList(),
    akkaserverless_component_component_pb.SideEffect.toObject, includeInstance),
    stateAction: (f = msg.getStateAction()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.toObject(includeInstance, f),
    streamed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply;
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommandId(value);
      break;
    case 2:
      var value = new akkaserverless_component_component_pb.ClientAction;
      reader.readMessage(value,akkaserverless_component_component_pb.ClientAction.deserializeBinaryFromReader);
      msg.setClientAction(value);
      break;
    case 4:
      var value = new akkaserverless_component_component_pb.SideEffect;
      reader.readMessage(value,akkaserverless_component_component_pb.SideEffect.deserializeBinaryFromReader);
      msg.addSideEffects(value);
      break;
    case 5:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.deserializeBinaryFromReader);
      msg.setStateAction(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStreamed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClientAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      akkaserverless_component_component_pb.ClientAction.serializeBinaryToWriter
    );
  }
  f = message.getSideEffectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      akkaserverless_component_component_pb.SideEffect.serializeBinaryToWriter
    );
  }
  f = message.getStateAction();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.serializeBinaryToWriter
    );
  }
  f = message.getStreamed();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional int64 command_id = 1;
 * @return {number}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional akkaserverless.component.ClientAction client_action = 2;
 * @return {?proto.akkaserverless.component.ClientAction}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.getClientAction = function() {
  return /** @type{?proto.akkaserverless.component.ClientAction} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_component_pb.ClientAction, 2));
};


/**
 * @param {?proto.akkaserverless.component.ClientAction|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.setClientAction = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.clearClientAction = function() {
  return this.setClientAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.hasClientAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated akkaserverless.component.SideEffect side_effects = 4;
 * @return {!Array<!proto.akkaserverless.component.SideEffect>}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.getSideEffectsList = function() {
  return /** @type{!Array<!proto.akkaserverless.component.SideEffect>} */ (
    jspb.Message.getRepeatedWrapperField(this, akkaserverless_component_component_pb.SideEffect, 4));
};


/**
 * @param {!Array<!proto.akkaserverless.component.SideEffect>} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.setSideEffectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.akkaserverless.component.SideEffect=} opt_value
 * @param {number=} opt_index
 * @return {!proto.akkaserverless.component.SideEffect}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.addSideEffects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.akkaserverless.component.SideEffect, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.clearSideEffectsList = function() {
  return this.setSideEffectsList([]);
};


/**
 * optional ReplicatedEntityStateAction state_action = 5;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.getStateAction = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction, 5));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.setStateAction = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.clearStateAction = function() {
  return this.setStateAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.hasStateAction = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool streamed = 6;
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.getStreamed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityReply.prototype.setStreamed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.ActionCase = {
  ACTION_NOT_SET: 0,
  UPDATE: 1,
  DELETE: 2
};

/**
 * @return {proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.ActionCase}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.getActionCase = function() {
  return /** @type {proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.ActionCase} */(jspb.Message.computeOneofCase(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    update: (f = msg.getUpdate()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.toObject(includeInstance, f),
    pb_delete: (f = msg.getDelete()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.toObject(includeInstance, f),
    writeConsistency: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction;
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 2:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.deserializeBinaryFromReader);
      msg.setDelete(value);
      break;
    case 3:
      var value = /** @type {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityWriteConsistency} */ (reader.readEnum());
      msg.setWriteConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta.serializeBinaryToWriter
    );
  }
  f = message.getDelete();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete.serializeBinaryToWriter
    );
  }
  f = message.getWriteConsistency();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional ReplicatedEntityDelta update = 1;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.getUpdate = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta, 1));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelta|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ReplicatedEntityDelete delete = 2;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.getDelete = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete, 2));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityDelete|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.setDelete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.clearDelete = function() {
  return this.setDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.hasDelete = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ReplicatedEntityWriteConsistency write_consistency = 3;
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityWriteConsistency}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.getWriteConsistency = function() {
  return /** @type {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityWriteConsistency} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityWriteConsistency} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.prototype.setWriteConsistency = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    clientAction: (f = msg.getClientAction()) && akkaserverless_component_component_pb.ClientAction.toObject(includeInstance, f),
    sideEffectsList: jspb.Message.toObjectList(msg.getSideEffectsList(),
    akkaserverless_component_component_pb.SideEffect.toObject, includeInstance),
    endStream: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage;
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommandId(value);
      break;
    case 2:
      var value = new akkaserverless_component_component_pb.ClientAction;
      reader.readMessage(value,akkaserverless_component_component_pb.ClientAction.deserializeBinaryFromReader);
      msg.setClientAction(value);
      break;
    case 3:
      var value = new akkaserverless_component_component_pb.SideEffect;
      reader.readMessage(value,akkaserverless_component_component_pb.SideEffect.deserializeBinaryFromReader);
      msg.addSideEffects(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEndStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClientAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      akkaserverless_component_component_pb.ClientAction.serializeBinaryToWriter
    );
  }
  f = message.getSideEffectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      akkaserverless_component_component_pb.SideEffect.serializeBinaryToWriter
    );
  }
  f = message.getEndStream();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional int64 command_id = 1;
 * @return {number}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional akkaserverless.component.ClientAction client_action = 2;
 * @return {?proto.akkaserverless.component.ClientAction}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.getClientAction = function() {
  return /** @type{?proto.akkaserverless.component.ClientAction} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_component_pb.ClientAction, 2));
};


/**
 * @param {?proto.akkaserverless.component.ClientAction|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.setClientAction = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.clearClientAction = function() {
  return this.setClientAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.hasClientAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated akkaserverless.component.SideEffect side_effects = 3;
 * @return {!Array<!proto.akkaserverless.component.SideEffect>}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.getSideEffectsList = function() {
  return /** @type{!Array<!proto.akkaserverless.component.SideEffect>} */ (
    jspb.Message.getRepeatedWrapperField(this, akkaserverless_component_component_pb.SideEffect, 3));
};


/**
 * @param {!Array<!proto.akkaserverless.component.SideEffect>} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.setSideEffectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.akkaserverless.component.SideEffect=} opt_value
 * @param {number=} opt_index
 * @return {!proto.akkaserverless.component.SideEffect}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.addSideEffects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.akkaserverless.component.SideEffect, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.clearSideEffectsList = function() {
  return this.setSideEffectsList([]);
};


/**
 * optional bool end_stream = 4;
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.getEndStream = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamedMessage.prototype.setEndStream = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sideEffectsList: jspb.Message.toObjectList(msg.getSideEffectsList(),
    akkaserverless_component_component_pb.SideEffect.toObject, includeInstance),
    stateAction: (f = msg.getStateAction()) && proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse;
  return proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommandId(value);
      break;
    case 2:
      var value = new akkaserverless_component_component_pb.SideEffect;
      reader.readMessage(value,akkaserverless_component_component_pb.SideEffect.deserializeBinaryFromReader);
      msg.addSideEffects(value);
      break;
    case 3:
      var value = new proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction;
      reader.readMessage(value,proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.deserializeBinaryFromReader);
      msg.setStateAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSideEffectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      akkaserverless_component_component_pb.SideEffect.serializeBinaryToWriter
    );
  }
  f = message.getStateAction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 command_id = 1;
 * @return {number}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated akkaserverless.component.SideEffect side_effects = 2;
 * @return {!Array<!proto.akkaserverless.component.SideEffect>}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.getSideEffectsList = function() {
  return /** @type{!Array<!proto.akkaserverless.component.SideEffect>} */ (
    jspb.Message.getRepeatedWrapperField(this, akkaserverless_component_component_pb.SideEffect, 2));
};


/**
 * @param {!Array<!proto.akkaserverless.component.SideEffect>} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.setSideEffectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.akkaserverless.component.SideEffect=} opt_value
 * @param {number=} opt_index
 * @return {!proto.akkaserverless.component.SideEffect}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.addSideEffects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.akkaserverless.component.SideEffect, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.clearSideEffectsList = function() {
  return this.setSideEffectsList([]);
};


/**
 * optional ReplicatedEntityStateAction state_action = 3;
 * @return {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.getStateAction = function() {
  return /** @type{?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction, 3));
};


/**
 * @param {?proto.akkaserverless.component.replicatedentity.ReplicatedEntityStateAction|undefined} value
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse} returns this
*/
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.setStateAction = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse} returns this
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.clearStateAction = function() {
  return this.setStateAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityStreamCancelledResponse.prototype.hasStateAction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityWriteConsistency = {
  REPLICATED_ENTITY_WRITE_CONSISTENCY_LOCAL_UNSPECIFIED: 0,
  REPLICATED_ENTITY_WRITE_CONSISTENCY_MAJORITY: 1,
  REPLICATED_ENTITY_WRITE_CONSISTENCY_ALL: 2
};

/**
 * @enum {number}
 */
proto.akkaserverless.component.replicatedentity.ReplicatedEntityClock = {
  REPLICATED_ENTITY_CLOCK_DEFAULT_UNSPECIFIED: 0,
  REPLICATED_ENTITY_CLOCK_REVERSE: 1,
  REPLICATED_ENTITY_CLOCK_CUSTOM: 2,
  REPLICATED_ENTITY_CLOCK_CUSTOM_AUTO_INCREMENT: 3
};

goog.object.extend(exports, proto.akkaserverless.component.replicatedentity);
