export = GCounter;
/**
 * @classdesc A Grow-only counter Replicated Data type.
 *
 * As the name suggests, a grow only counter can be incremented, but not decremented.
 *
 * The value is stored as a 64-bit unsigned long, hence values over `2^64` can't be represented.
 *
 * @constructor module:akkaserverless.replicatedentity.GCounter
 * @implements module:akkaserverless.replicatedentity.ReplicatedData
 */
declare function GCounter(): void;
declare class GCounter {
    /**
     * Increment the counter by the given number.
     *
     * @function module:akkaserverless.replicatedentity.GCounter#increment
     * @param {Long|number} increment The amount to increment the counter by.
     * @returns {module:akkaserverless.replicatedentity.GCounter} This counter.
     * @throws If the increment is less than zero.
     */
    increment: (increment: Long | number) => any;
    getAndResetDelta: (initial: any) => {
        gcounter: {
            increment: Long.Long;
        };
    } | null;
    applyDelta: (delta: any) => void;
    toString: () => string;
}
import Long = require("long");
