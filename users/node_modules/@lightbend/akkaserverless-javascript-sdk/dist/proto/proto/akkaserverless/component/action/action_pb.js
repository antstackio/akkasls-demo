// source: akkaserverless/component/action/action.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var akkaserverless_component_component_pb = require('../../../akkaserverless/component/component_pb.js');
goog.object.extend(proto, akkaserverless_component_component_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.akkaserverless.component.action.ActionCommand', null, global);
goog.exportSymbol('proto.akkaserverless.component.action.ActionResponse', null, global);
goog.exportSymbol('proto.akkaserverless.component.action.ActionResponse.ResponseCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.action.ActionCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.action.ActionCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.action.ActionCommand.displayName = 'proto.akkaserverless.component.action.ActionCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.action.ActionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.akkaserverless.component.action.ActionResponse.repeatedFields_, proto.akkaserverless.component.action.ActionResponse.oneofGroups_);
};
goog.inherits(proto.akkaserverless.component.action.ActionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.action.ActionResponse.displayName = 'proto.akkaserverless.component.action.ActionResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.action.ActionCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.action.ActionCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.action.ActionCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.action.ActionCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    payload: (f = msg.getPayload()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && akkaserverless_component_component_pb.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.action.ActionCommand}
 */
proto.akkaserverless.component.action.ActionCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.action.ActionCommand;
  return proto.akkaserverless.component.action.ActionCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.action.ActionCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.action.ActionCommand}
 */
proto.akkaserverless.component.action.ActionCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 5:
      var value = new akkaserverless_component_component_pb.Metadata;
      reader.readMessage(value,akkaserverless_component_component_pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.action.ActionCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.action.ActionCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.action.ActionCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.action.ActionCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      akkaserverless_component_component_pb.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string service_name = 2;
 * @return {string}
 */
proto.akkaserverless.component.action.ActionCommand.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.akkaserverless.component.action.ActionCommand} returns this
 */
proto.akkaserverless.component.action.ActionCommand.prototype.setServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.akkaserverless.component.action.ActionCommand.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.akkaserverless.component.action.ActionCommand} returns this
 */
proto.akkaserverless.component.action.ActionCommand.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Any payload = 4;
 * @return {?proto.google.protobuf.Any}
 */
proto.akkaserverless.component.action.ActionCommand.prototype.getPayload = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 4));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.akkaserverless.component.action.ActionCommand} returns this
*/
proto.akkaserverless.component.action.ActionCommand.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.action.ActionCommand} returns this
 */
proto.akkaserverless.component.action.ActionCommand.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.action.ActionCommand.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional akkaserverless.component.Metadata metadata = 5;
 * @return {?proto.akkaserverless.component.Metadata}
 */
proto.akkaserverless.component.action.ActionCommand.prototype.getMetadata = function() {
  return /** @type{?proto.akkaserverless.component.Metadata} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_component_pb.Metadata, 5));
};


/**
 * @param {?proto.akkaserverless.component.Metadata|undefined} value
 * @return {!proto.akkaserverless.component.action.ActionCommand} returns this
*/
proto.akkaserverless.component.action.ActionCommand.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.action.ActionCommand} returns this
 */
proto.akkaserverless.component.action.ActionCommand.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.action.ActionCommand.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.akkaserverless.component.action.ActionResponse.repeatedFields_ = [4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.akkaserverless.component.action.ActionResponse.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.akkaserverless.component.action.ActionResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  FAILURE: 1,
  REPLY: 2,
  FORWARD: 3
};

/**
 * @return {proto.akkaserverless.component.action.ActionResponse.ResponseCase}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.getResponseCase = function() {
  return /** @type {proto.akkaserverless.component.action.ActionResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.akkaserverless.component.action.ActionResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.action.ActionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.action.ActionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.action.ActionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    failure: (f = msg.getFailure()) && akkaserverless_component_component_pb.Failure.toObject(includeInstance, f),
    reply: (f = msg.getReply()) && akkaserverless_component_component_pb.Reply.toObject(includeInstance, f),
    forward: (f = msg.getForward()) && akkaserverless_component_component_pb.Forward.toObject(includeInstance, f),
    sideEffectsList: jspb.Message.toObjectList(msg.getSideEffectsList(),
    akkaserverless_component_component_pb.SideEffect.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.action.ActionResponse}
 */
proto.akkaserverless.component.action.ActionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.action.ActionResponse;
  return proto.akkaserverless.component.action.ActionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.action.ActionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.action.ActionResponse}
 */
proto.akkaserverless.component.action.ActionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new akkaserverless_component_component_pb.Failure;
      reader.readMessage(value,akkaserverless_component_component_pb.Failure.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    case 2:
      var value = new akkaserverless_component_component_pb.Reply;
      reader.readMessage(value,akkaserverless_component_component_pb.Reply.deserializeBinaryFromReader);
      msg.setReply(value);
      break;
    case 3:
      var value = new akkaserverless_component_component_pb.Forward;
      reader.readMessage(value,akkaserverless_component_component_pb.Forward.deserializeBinaryFromReader);
      msg.setForward(value);
      break;
    case 4:
      var value = new akkaserverless_component_component_pb.SideEffect;
      reader.readMessage(value,akkaserverless_component_component_pb.SideEffect.deserializeBinaryFromReader);
      msg.addSideEffects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.action.ActionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.action.ActionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.action.ActionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      akkaserverless_component_component_pb.Failure.serializeBinaryToWriter
    );
  }
  f = message.getReply();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      akkaserverless_component_component_pb.Reply.serializeBinaryToWriter
    );
  }
  f = message.getForward();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      akkaserverless_component_component_pb.Forward.serializeBinaryToWriter
    );
  }
  f = message.getSideEffectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      akkaserverless_component_component_pb.SideEffect.serializeBinaryToWriter
    );
  }
};


/**
 * optional akkaserverless.component.Failure failure = 1;
 * @return {?proto.akkaserverless.component.Failure}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.getFailure = function() {
  return /** @type{?proto.akkaserverless.component.Failure} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_component_pb.Failure, 1));
};


/**
 * @param {?proto.akkaserverless.component.Failure|undefined} value
 * @return {!proto.akkaserverless.component.action.ActionResponse} returns this
*/
proto.akkaserverless.component.action.ActionResponse.prototype.setFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.akkaserverless.component.action.ActionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.action.ActionResponse} returns this
 */
proto.akkaserverless.component.action.ActionResponse.prototype.clearFailure = function() {
  return this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional akkaserverless.component.Reply reply = 2;
 * @return {?proto.akkaserverless.component.Reply}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.getReply = function() {
  return /** @type{?proto.akkaserverless.component.Reply} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_component_pb.Reply, 2));
};


/**
 * @param {?proto.akkaserverless.component.Reply|undefined} value
 * @return {!proto.akkaserverless.component.action.ActionResponse} returns this
*/
proto.akkaserverless.component.action.ActionResponse.prototype.setReply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.akkaserverless.component.action.ActionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.action.ActionResponse} returns this
 */
proto.akkaserverless.component.action.ActionResponse.prototype.clearReply = function() {
  return this.setReply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.hasReply = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional akkaserverless.component.Forward forward = 3;
 * @return {?proto.akkaserverless.component.Forward}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.getForward = function() {
  return /** @type{?proto.akkaserverless.component.Forward} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_component_pb.Forward, 3));
};


/**
 * @param {?proto.akkaserverless.component.Forward|undefined} value
 * @return {!proto.akkaserverless.component.action.ActionResponse} returns this
*/
proto.akkaserverless.component.action.ActionResponse.prototype.setForward = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.akkaserverless.component.action.ActionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.action.ActionResponse} returns this
 */
proto.akkaserverless.component.action.ActionResponse.prototype.clearForward = function() {
  return this.setForward(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.hasForward = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated akkaserverless.component.SideEffect side_effects = 4;
 * @return {!Array<!proto.akkaserverless.component.SideEffect>}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.getSideEffectsList = function() {
  return /** @type{!Array<!proto.akkaserverless.component.SideEffect>} */ (
    jspb.Message.getRepeatedWrapperField(this, akkaserverless_component_component_pb.SideEffect, 4));
};


/**
 * @param {!Array<!proto.akkaserverless.component.SideEffect>} value
 * @return {!proto.akkaserverless.component.action.ActionResponse} returns this
*/
proto.akkaserverless.component.action.ActionResponse.prototype.setSideEffectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.akkaserverless.component.SideEffect=} opt_value
 * @param {number=} opt_index
 * @return {!proto.akkaserverless.component.SideEffect}
 */
proto.akkaserverless.component.action.ActionResponse.prototype.addSideEffects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.akkaserverless.component.SideEffect, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.action.ActionResponse} returns this
 */
proto.akkaserverless.component.action.ActionResponse.prototype.clearSideEffectsList = function() {
  return this.setSideEffectsList([]);
};


goog.object.extend(exports, proto.akkaserverless.component.action);
