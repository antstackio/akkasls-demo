// package: akkaserverless
// file: akkaserverless/annotations.proto

/* tslint:disable */
/* eslint-disable */

import * as jspb from "google-protobuf";
import * as akkaserverless_component_pb from "../akkaserverless/component_pb";
import * as akkaserverless_eventing_pb from "../akkaserverless/eventing_pb";
import * as akkaserverless_views_pb from "../akkaserverless/views_pb";
import * as google_protobuf_descriptor_pb from "google-protobuf/google/protobuf/descriptor_pb";

export class FieldOptions extends jspb.Message { 
    getEntityKey(): boolean;
    setEntityKey(value: boolean): FieldOptions;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): FieldOptions.AsObject;
    static toObject(includeInstance: boolean, msg: FieldOptions): FieldOptions.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: FieldOptions, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): FieldOptions;
    static deserializeBinaryFromReader(message: FieldOptions, reader: jspb.BinaryReader): FieldOptions;
}

export namespace FieldOptions {
    export type AsObject = {
        entityKey: boolean,
    }
}

export class FileOptions extends jspb.Message { 

    hasEventSourcedEntity(): boolean;
    clearEventSourcedEntity(): void;
    getEventSourcedEntity(): akkaserverless_component_pb.EventSourcedEntity | undefined;
    setEventSourcedEntity(value?: akkaserverless_component_pb.EventSourcedEntity): FileOptions;

    hasValueEntity(): boolean;
    clearValueEntity(): void;
    getValueEntity(): akkaserverless_component_pb.ValueEntity | undefined;
    setValueEntity(value?: akkaserverless_component_pb.ValueEntity): FileOptions;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): FileOptions.AsObject;
    static toObject(includeInstance: boolean, msg: FileOptions): FileOptions.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: FileOptions, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): FileOptions;
    static deserializeBinaryFromReader(message: FileOptions, reader: jspb.BinaryReader): FileOptions;
}

export namespace FileOptions {
    export type AsObject = {
        eventSourcedEntity?: akkaserverless_component_pb.EventSourcedEntity.AsObject,
        valueEntity?: akkaserverless_component_pb.ValueEntity.AsObject,
    }
}

export class MethodOptions extends jspb.Message { 

    hasEventing(): boolean;
    clearEventing(): void;
    getEventing(): akkaserverless_eventing_pb.Eventing | undefined;
    setEventing(value?: akkaserverless_eventing_pb.Eventing): MethodOptions;

    hasView(): boolean;
    clearView(): void;
    getView(): akkaserverless_views_pb.View | undefined;
    setView(value?: akkaserverless_views_pb.View): MethodOptions;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): MethodOptions.AsObject;
    static toObject(includeInstance: boolean, msg: MethodOptions): MethodOptions.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: MethodOptions, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): MethodOptions;
    static deserializeBinaryFromReader(message: MethodOptions, reader: jspb.BinaryReader): MethodOptions;
}

export namespace MethodOptions {
    export type AsObject = {
        eventing?: akkaserverless_eventing_pb.Eventing.AsObject,
        view?: akkaserverless_views_pb.View.AsObject,
    }
}

export class ServiceOptions extends jspb.Message { 
    getType(): ServiceOptions.ServiceType;
    setType(value: ServiceOptions.ServiceType): ServiceOptions;
    getComponent(): string;
    setComponent(value: string): ServiceOptions;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ServiceOptions.AsObject;
    static toObject(includeInstance: boolean, msg: ServiceOptions): ServiceOptions.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ServiceOptions, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ServiceOptions;
    static deserializeBinaryFromReader(message: ServiceOptions, reader: jspb.BinaryReader): ServiceOptions;
}

export namespace ServiceOptions {
    export type AsObject = {
        type: ServiceOptions.ServiceType,
        component: string,
    }

    export enum ServiceType {
    SERVICE_TYPE_UNSPECIFIED = 0,
    SERVICE_TYPE_ACTION = 1,
    SERVICE_TYPE_ENTITY = 2,
    SERVICE_TYPE_VIEW = 3,
    }

}

export const field: jspb.ExtensionFieldInfo<FieldOptions>;

export const file: jspb.ExtensionFieldInfo<FileOptions>;

export const method: jspb.ExtensionFieldInfo<MethodOptions>;

export const service: jspb.ExtensionFieldInfo<ServiceOptions>;
