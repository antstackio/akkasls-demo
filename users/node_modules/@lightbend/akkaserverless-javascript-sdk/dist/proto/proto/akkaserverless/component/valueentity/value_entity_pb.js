// source: akkaserverless/component/valueentity/value_entity.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var akkaserverless_component_component_pb = require('../../../akkaserverless/component/component_pb.js');
goog.object.extend(proto, akkaserverless_component_component_pb);
var akkaserverless_component_entity_entity_pb = require('../../../akkaserverless/component/entity/entity_pb.js');
goog.object.extend(proto, akkaserverless_component_entity_entity_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityAction', null, global);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityAction.ActionCase', null, global);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityDelete', null, global);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityInit', null, global);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityInitState', null, global);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityReply', null, global);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityStreamIn', null, global);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityStreamIn.MessageCase', null, global);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityStreamOut', null, global);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityStreamOut.MessageCase', null, global);
goog.exportSymbol('proto.akkaserverless.component.valueentity.ValueEntityUpdate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.akkaserverless.component.valueentity.ValueEntityStreamIn.oneofGroups_);
};
goog.inherits(proto.akkaserverless.component.valueentity.ValueEntityStreamIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.valueentity.ValueEntityStreamIn.displayName = 'proto.akkaserverless.component.valueentity.ValueEntityStreamIn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.valueentity.ValueEntityInit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.valueentity.ValueEntityInit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.valueentity.ValueEntityInit.displayName = 'proto.akkaserverless.component.valueentity.ValueEntityInit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.valueentity.ValueEntityInitState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.valueentity.ValueEntityInitState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.valueentity.ValueEntityInitState.displayName = 'proto.akkaserverless.component.valueentity.ValueEntityInitState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.akkaserverless.component.valueentity.ValueEntityStreamOut.oneofGroups_);
};
goog.inherits(proto.akkaserverless.component.valueentity.ValueEntityStreamOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.valueentity.ValueEntityStreamOut.displayName = 'proto.akkaserverless.component.valueentity.ValueEntityStreamOut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.valueentity.ValueEntityReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.akkaserverless.component.valueentity.ValueEntityReply.repeatedFields_, null);
};
goog.inherits(proto.akkaserverless.component.valueentity.ValueEntityReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.valueentity.ValueEntityReply.displayName = 'proto.akkaserverless.component.valueentity.ValueEntityReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.valueentity.ValueEntityAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.akkaserverless.component.valueentity.ValueEntityAction.oneofGroups_);
};
goog.inherits(proto.akkaserverless.component.valueentity.ValueEntityAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.valueentity.ValueEntityAction.displayName = 'proto.akkaserverless.component.valueentity.ValueEntityAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.valueentity.ValueEntityUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.valueentity.ValueEntityUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.valueentity.ValueEntityUpdate.displayName = 'proto.akkaserverless.component.valueentity.ValueEntityUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akkaserverless.component.valueentity.ValueEntityDelete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akkaserverless.component.valueentity.ValueEntityDelete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akkaserverless.component.valueentity.ValueEntityDelete.displayName = 'proto.akkaserverless.component.valueentity.ValueEntityDelete';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.MessageCase = {
  MESSAGE_NOT_SET: 0,
  INIT: 1,
  COMMAND: 2
};

/**
 * @return {proto.akkaserverless.component.valueentity.ValueEntityStreamIn.MessageCase}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.getMessageCase = function() {
  return /** @type {proto.akkaserverless.component.valueentity.ValueEntityStreamIn.MessageCase} */(jspb.Message.computeOneofCase(this, proto.akkaserverless.component.valueentity.ValueEntityStreamIn.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.valueentity.ValueEntityStreamIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityStreamIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.toObject = function(includeInstance, msg) {
  var f, obj = {
    init: (f = msg.getInit()) && proto.akkaserverless.component.valueentity.ValueEntityInit.toObject(includeInstance, f),
    command: (f = msg.getCommand()) && akkaserverless_component_entity_entity_pb.Command.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamIn}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.valueentity.ValueEntityStreamIn;
  return proto.akkaserverless.component.valueentity.ValueEntityStreamIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityStreamIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamIn}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akkaserverless.component.valueentity.ValueEntityInit;
      reader.readMessage(value,proto.akkaserverless.component.valueentity.ValueEntityInit.deserializeBinaryFromReader);
      msg.setInit(value);
      break;
    case 2:
      var value = new akkaserverless_component_entity_entity_pb.Command;
      reader.readMessage(value,akkaserverless_component_entity_entity_pb.Command.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.valueentity.ValueEntityStreamIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityStreamIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akkaserverless.component.valueentity.ValueEntityInit.serializeBinaryToWriter
    );
  }
  f = message.getCommand();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      akkaserverless_component_entity_entity_pb.Command.serializeBinaryToWriter
    );
  }
};


/**
 * optional ValueEntityInit init = 1;
 * @return {?proto.akkaserverless.component.valueentity.ValueEntityInit}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.getInit = function() {
  return /** @type{?proto.akkaserverless.component.valueentity.ValueEntityInit} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.valueentity.ValueEntityInit, 1));
};


/**
 * @param {?proto.akkaserverless.component.valueentity.ValueEntityInit|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamIn} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.setInit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.akkaserverless.component.valueentity.ValueEntityStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamIn} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.clearInit = function() {
  return this.setInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.hasInit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional akkaserverless.component.entity.Command command = 2;
 * @return {?proto.akkaserverless.component.entity.Command}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.getCommand = function() {
  return /** @type{?proto.akkaserverless.component.entity.Command} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_entity_entity_pb.Command, 2));
};


/**
 * @param {?proto.akkaserverless.component.entity.Command|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamIn} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.setCommand = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.akkaserverless.component.valueentity.ValueEntityStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamIn} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.clearCommand = function() {
  return this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamIn.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.valueentity.ValueEntityInit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityInit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entityId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: (f = msg.getState()) && proto.akkaserverless.component.valueentity.ValueEntityInitState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityInit}
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.valueentity.ValueEntityInit;
  return proto.akkaserverless.component.valueentity.ValueEntityInit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityInit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityInit}
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityId(value);
      break;
    case 3:
      var value = new proto.akkaserverless.component.valueentity.ValueEntityInitState;
      reader.readMessage(value,proto.akkaserverless.component.valueentity.ValueEntityInitState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.valueentity.ValueEntityInit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityInit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntityId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.akkaserverless.component.valueentity.ValueEntityInitState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string service_name = 1;
 * @return {string}
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityInit} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.prototype.setServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string entity_id = 2;
 * @return {string}
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.prototype.getEntityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityInit} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ValueEntityInitState state = 3;
 * @return {?proto.akkaserverless.component.valueentity.ValueEntityInitState}
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.prototype.getState = function() {
  return /** @type{?proto.akkaserverless.component.valueentity.ValueEntityInitState} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.valueentity.ValueEntityInitState, 3));
};


/**
 * @param {?proto.akkaserverless.component.valueentity.ValueEntityInitState|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityInit} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityInit.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityInit} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityInit.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.valueentity.ValueEntityInitState.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.valueentity.ValueEntityInitState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityInitState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityInitState.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityInitState}
 */
proto.akkaserverless.component.valueentity.ValueEntityInitState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.valueentity.ValueEntityInitState;
  return proto.akkaserverless.component.valueentity.ValueEntityInitState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityInitState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityInitState}
 */
proto.akkaserverless.component.valueentity.ValueEntityInitState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.valueentity.ValueEntityInitState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.valueentity.ValueEntityInitState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityInitState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityInitState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any value = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.akkaserverless.component.valueentity.ValueEntityInitState.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityInitState} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityInitState.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityInitState} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityInitState.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityInitState.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.MessageCase = {
  MESSAGE_NOT_SET: 0,
  REPLY: 1,
  FAILURE: 2
};

/**
 * @return {proto.akkaserverless.component.valueentity.ValueEntityStreamOut.MessageCase}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.getMessageCase = function() {
  return /** @type {proto.akkaserverless.component.valueentity.ValueEntityStreamOut.MessageCase} */(jspb.Message.computeOneofCase(this, proto.akkaserverless.component.valueentity.ValueEntityStreamOut.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.valueentity.ValueEntityStreamOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityStreamOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    reply: (f = msg.getReply()) && proto.akkaserverless.component.valueentity.ValueEntityReply.toObject(includeInstance, f),
    failure: (f = msg.getFailure()) && akkaserverless_component_component_pb.Failure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamOut}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.valueentity.ValueEntityStreamOut;
  return proto.akkaserverless.component.valueentity.ValueEntityStreamOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityStreamOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamOut}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akkaserverless.component.valueentity.ValueEntityReply;
      reader.readMessage(value,proto.akkaserverless.component.valueentity.ValueEntityReply.deserializeBinaryFromReader);
      msg.setReply(value);
      break;
    case 2:
      var value = new akkaserverless_component_component_pb.Failure;
      reader.readMessage(value,akkaserverless_component_component_pb.Failure.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.valueentity.ValueEntityStreamOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityStreamOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReply();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akkaserverless.component.valueentity.ValueEntityReply.serializeBinaryToWriter
    );
  }
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      akkaserverless_component_component_pb.Failure.serializeBinaryToWriter
    );
  }
};


/**
 * optional ValueEntityReply reply = 1;
 * @return {?proto.akkaserverless.component.valueentity.ValueEntityReply}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.getReply = function() {
  return /** @type{?proto.akkaserverless.component.valueentity.ValueEntityReply} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.valueentity.ValueEntityReply, 1));
};


/**
 * @param {?proto.akkaserverless.component.valueentity.ValueEntityReply|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamOut} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.setReply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.akkaserverless.component.valueentity.ValueEntityStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamOut} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.clearReply = function() {
  return this.setReply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.hasReply = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional akkaserverless.component.Failure failure = 2;
 * @return {?proto.akkaserverless.component.Failure}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.getFailure = function() {
  return /** @type{?proto.akkaserverless.component.Failure} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_component_pb.Failure, 2));
};


/**
 * @param {?proto.akkaserverless.component.Failure|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamOut} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.setFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.akkaserverless.component.valueentity.ValueEntityStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityStreamOut} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.clearFailure = function() {
  return this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityStreamOut.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.valueentity.ValueEntityReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    clientAction: (f = msg.getClientAction()) && akkaserverless_component_component_pb.ClientAction.toObject(includeInstance, f),
    sideEffectsList: jspb.Message.toObjectList(msg.getSideEffectsList(),
    akkaserverless_component_component_pb.SideEffect.toObject, includeInstance),
    stateAction: (f = msg.getStateAction()) && proto.akkaserverless.component.valueentity.ValueEntityAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityReply}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.valueentity.ValueEntityReply;
  return proto.akkaserverless.component.valueentity.ValueEntityReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityReply}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommandId(value);
      break;
    case 2:
      var value = new akkaserverless_component_component_pb.ClientAction;
      reader.readMessage(value,akkaserverless_component_component_pb.ClientAction.deserializeBinaryFromReader);
      msg.setClientAction(value);
      break;
    case 3:
      var value = new akkaserverless_component_component_pb.SideEffect;
      reader.readMessage(value,akkaserverless_component_component_pb.SideEffect.deserializeBinaryFromReader);
      msg.addSideEffects(value);
      break;
    case 4:
      var value = new proto.akkaserverless.component.valueentity.ValueEntityAction;
      reader.readMessage(value,proto.akkaserverless.component.valueentity.ValueEntityAction.deserializeBinaryFromReader);
      msg.setStateAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.valueentity.ValueEntityReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClientAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      akkaserverless_component_component_pb.ClientAction.serializeBinaryToWriter
    );
  }
  f = message.getSideEffectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      akkaserverless_component_component_pb.SideEffect.serializeBinaryToWriter
    );
  }
  f = message.getStateAction();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.akkaserverless.component.valueentity.ValueEntityAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 command_id = 1;
 * @return {number}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityReply} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional akkaserverless.component.ClientAction client_action = 2;
 * @return {?proto.akkaserverless.component.ClientAction}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.getClientAction = function() {
  return /** @type{?proto.akkaserverless.component.ClientAction} */ (
    jspb.Message.getWrapperField(this, akkaserverless_component_component_pb.ClientAction, 2));
};


/**
 * @param {?proto.akkaserverless.component.ClientAction|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityReply} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.setClientAction = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityReply} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.clearClientAction = function() {
  return this.setClientAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.hasClientAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated akkaserverless.component.SideEffect side_effects = 3;
 * @return {!Array<!proto.akkaserverless.component.SideEffect>}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.getSideEffectsList = function() {
  return /** @type{!Array<!proto.akkaserverless.component.SideEffect>} */ (
    jspb.Message.getRepeatedWrapperField(this, akkaserverless_component_component_pb.SideEffect, 3));
};


/**
 * @param {!Array<!proto.akkaserverless.component.SideEffect>} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityReply} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.setSideEffectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.akkaserverless.component.SideEffect=} opt_value
 * @param {number=} opt_index
 * @return {!proto.akkaserverless.component.SideEffect}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.addSideEffects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.akkaserverless.component.SideEffect, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityReply} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.clearSideEffectsList = function() {
  return this.setSideEffectsList([]);
};


/**
 * optional ValueEntityAction state_action = 4;
 * @return {?proto.akkaserverless.component.valueentity.ValueEntityAction}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.getStateAction = function() {
  return /** @type{?proto.akkaserverless.component.valueentity.ValueEntityAction} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.valueentity.ValueEntityAction, 4));
};


/**
 * @param {?proto.akkaserverless.component.valueentity.ValueEntityAction|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityReply} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.setStateAction = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityReply} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.clearStateAction = function() {
  return this.setStateAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityReply.prototype.hasStateAction = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.ActionCase = {
  ACTION_NOT_SET: 0,
  UPDATE: 1,
  DELETE: 2
};

/**
 * @return {proto.akkaserverless.component.valueentity.ValueEntityAction.ActionCase}
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.getActionCase = function() {
  return /** @type {proto.akkaserverless.component.valueentity.ValueEntityAction.ActionCase} */(jspb.Message.computeOneofCase(this, proto.akkaserverless.component.valueentity.ValueEntityAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.valueentity.ValueEntityAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    update: (f = msg.getUpdate()) && proto.akkaserverless.component.valueentity.ValueEntityUpdate.toObject(includeInstance, f),
    pb_delete: (f = msg.getDelete()) && proto.akkaserverless.component.valueentity.ValueEntityDelete.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityAction}
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.valueentity.ValueEntityAction;
  return proto.akkaserverless.component.valueentity.ValueEntityAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityAction}
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akkaserverless.component.valueentity.ValueEntityUpdate;
      reader.readMessage(value,proto.akkaserverless.component.valueentity.ValueEntityUpdate.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 2:
      var value = new proto.akkaserverless.component.valueentity.ValueEntityDelete;
      reader.readMessage(value,proto.akkaserverless.component.valueentity.ValueEntityDelete.deserializeBinaryFromReader);
      msg.setDelete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.valueentity.ValueEntityAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akkaserverless.component.valueentity.ValueEntityUpdate.serializeBinaryToWriter
    );
  }
  f = message.getDelete();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.akkaserverless.component.valueentity.ValueEntityDelete.serializeBinaryToWriter
    );
  }
};


/**
 * optional ValueEntityUpdate update = 1;
 * @return {?proto.akkaserverless.component.valueentity.ValueEntityUpdate}
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.getUpdate = function() {
  return /** @type{?proto.akkaserverless.component.valueentity.ValueEntityUpdate} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.valueentity.ValueEntityUpdate, 1));
};


/**
 * @param {?proto.akkaserverless.component.valueentity.ValueEntityUpdate|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityAction} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.akkaserverless.component.valueentity.ValueEntityAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityAction} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ValueEntityDelete delete = 2;
 * @return {?proto.akkaserverless.component.valueentity.ValueEntityDelete}
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.getDelete = function() {
  return /** @type{?proto.akkaserverless.component.valueentity.ValueEntityDelete} */ (
    jspb.Message.getWrapperField(this, proto.akkaserverless.component.valueentity.ValueEntityDelete, 2));
};


/**
 * @param {?proto.akkaserverless.component.valueentity.ValueEntityDelete|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityAction} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.setDelete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.akkaserverless.component.valueentity.ValueEntityAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityAction} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.clearDelete = function() {
  return this.setDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityAction.prototype.hasDelete = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.valueentity.ValueEntityUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.valueentity.ValueEntityUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityUpdate}
 */
proto.akkaserverless.component.valueentity.ValueEntityUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.valueentity.ValueEntityUpdate;
  return proto.akkaserverless.component.valueentity.ValueEntityUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityUpdate}
 */
proto.akkaserverless.component.valueentity.ValueEntityUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.valueentity.ValueEntityUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.valueentity.ValueEntityUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any value = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.akkaserverless.component.valueentity.ValueEntityUpdate.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityUpdate} returns this
*/
proto.akkaserverless.component.valueentity.ValueEntityUpdate.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityUpdate} returns this
 */
proto.akkaserverless.component.valueentity.ValueEntityUpdate.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akkaserverless.component.valueentity.ValueEntityUpdate.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akkaserverless.component.valueentity.ValueEntityDelete.prototype.toObject = function(opt_includeInstance) {
  return proto.akkaserverless.component.valueentity.ValueEntityDelete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityDelete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityDelete.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityDelete}
 */
proto.akkaserverless.component.valueentity.ValueEntityDelete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akkaserverless.component.valueentity.ValueEntityDelete;
  return proto.akkaserverless.component.valueentity.ValueEntityDelete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityDelete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akkaserverless.component.valueentity.ValueEntityDelete}
 */
proto.akkaserverless.component.valueentity.ValueEntityDelete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akkaserverless.component.valueentity.ValueEntityDelete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akkaserverless.component.valueentity.ValueEntityDelete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akkaserverless.component.valueentity.ValueEntityDelete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akkaserverless.component.valueentity.ValueEntityDelete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.akkaserverless.component.valueentity);
