// package: akkaserverless
// file: akkaserverless/component.proto

/* tslint:disable */
/* eslint-disable */

import * as jspb from "google-protobuf";

export class EventSourcedEntity extends jspb.Message { 
    getName(): string;
    setName(value: string): EventSourcedEntity;
    getEntityType(): string;
    setEntityType(value: string): EventSourcedEntity;
    getState(): string;
    setState(value: string): EventSourcedEntity;
    clearEventsList(): void;
    getEventsList(): Array<string>;
    setEventsList(value: Array<string>): EventSourcedEntity;
    addEvents(value: string, index?: number): string;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): EventSourcedEntity.AsObject;
    static toObject(includeInstance: boolean, msg: EventSourcedEntity): EventSourcedEntity.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: EventSourcedEntity, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): EventSourcedEntity;
    static deserializeBinaryFromReader(message: EventSourcedEntity, reader: jspb.BinaryReader): EventSourcedEntity;
}

export namespace EventSourcedEntity {
    export type AsObject = {
        name: string,
        entityType: string,
        state: string,
        eventsList: Array<string>,
    }
}

export class ValueEntity extends jspb.Message { 
    getName(): string;
    setName(value: string): ValueEntity;
    getEntityType(): string;
    setEntityType(value: string): ValueEntity;
    getState(): string;
    setState(value: string): ValueEntity;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ValueEntity.AsObject;
    static toObject(includeInstance: boolean, msg: ValueEntity): ValueEntity.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ValueEntity, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ValueEntity;
    static deserializeBinaryFromReader(message: ValueEntity, reader: jspb.BinaryReader): ValueEntity;
}

export namespace ValueEntity {
    export type AsObject = {
        name: string,
        entityType: string,
        state: string,
    }
}
