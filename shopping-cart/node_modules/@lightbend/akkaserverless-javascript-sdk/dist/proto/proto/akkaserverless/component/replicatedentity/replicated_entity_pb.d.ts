// package: akkaserverless.component.replicatedentity
// file: akkaserverless/component/replicatedentity/replicated_entity.proto

/* tslint:disable */
/* eslint-disable */

import * as jspb from "google-protobuf";
import * as akkaserverless_component_component_pb from "../../../akkaserverless/component/component_pb";
import * as akkaserverless_component_entity_entity_pb from "../../../akkaserverless/component/entity/entity_pb";
import * as google_protobuf_any_pb from "google-protobuf/google/protobuf/any_pb";

export class ReplicatedEntityStreamIn extends jspb.Message { 

    hasInit(): boolean;
    clearInit(): void;
    getInit(): ReplicatedEntityInit | undefined;
    setInit(value?: ReplicatedEntityInit): ReplicatedEntityStreamIn;

    hasDelta(): boolean;
    clearDelta(): void;
    getDelta(): ReplicatedEntityDelta | undefined;
    setDelta(value?: ReplicatedEntityDelta): ReplicatedEntityStreamIn;

    hasDelete(): boolean;
    clearDelete(): void;
    getDelete(): ReplicatedEntityDelete | undefined;
    setDelete(value?: ReplicatedEntityDelete): ReplicatedEntityStreamIn;

    hasCommand(): boolean;
    clearCommand(): void;
    getCommand(): akkaserverless_component_entity_entity_pb.Command | undefined;
    setCommand(value?: akkaserverless_component_entity_entity_pb.Command): ReplicatedEntityStreamIn;

    hasStreamCancelled(): boolean;
    clearStreamCancelled(): void;
    getStreamCancelled(): akkaserverless_component_component_pb.StreamCancelled | undefined;
    setStreamCancelled(value?: akkaserverless_component_component_pb.StreamCancelled): ReplicatedEntityStreamIn;

    getMessageCase(): ReplicatedEntityStreamIn.MessageCase;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ReplicatedEntityStreamIn.AsObject;
    static toObject(includeInstance: boolean, msg: ReplicatedEntityStreamIn): ReplicatedEntityStreamIn.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ReplicatedEntityStreamIn, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ReplicatedEntityStreamIn;
    static deserializeBinaryFromReader(message: ReplicatedEntityStreamIn, reader: jspb.BinaryReader): ReplicatedEntityStreamIn;
}

export namespace ReplicatedEntityStreamIn {
    export type AsObject = {
        init?: ReplicatedEntityInit.AsObject,
        delta?: ReplicatedEntityDelta.AsObject,
        pb_delete?: ReplicatedEntityDelete.AsObject,
        command?: akkaserverless_component_entity_entity_pb.Command.AsObject,
        streamCancelled?: akkaserverless_component_component_pb.StreamCancelled.AsObject,
    }

    export enum MessageCase {
        MESSAGE_NOT_SET = 0,
        INIT = 1,
        DELTA = 2,
        DELETE = 3,
        COMMAND = 4,
        STREAM_CANCELLED = 5,
    }

}

export class ReplicatedEntityStreamOut extends jspb.Message { 

    hasReply(): boolean;
    clearReply(): void;
    getReply(): ReplicatedEntityReply | undefined;
    setReply(value?: ReplicatedEntityReply): ReplicatedEntityStreamOut;

    hasStreamedMessage(): boolean;
    clearStreamedMessage(): void;
    getStreamedMessage(): ReplicatedEntityStreamedMessage | undefined;
    setStreamedMessage(value?: ReplicatedEntityStreamedMessage): ReplicatedEntityStreamOut;

    hasStreamCancelledResponse(): boolean;
    clearStreamCancelledResponse(): void;
    getStreamCancelledResponse(): ReplicatedEntityStreamCancelledResponse | undefined;
    setStreamCancelledResponse(value?: ReplicatedEntityStreamCancelledResponse): ReplicatedEntityStreamOut;

    hasFailure(): boolean;
    clearFailure(): void;
    getFailure(): akkaserverless_component_component_pb.Failure | undefined;
    setFailure(value?: akkaserverless_component_component_pb.Failure): ReplicatedEntityStreamOut;

    getMessageCase(): ReplicatedEntityStreamOut.MessageCase;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ReplicatedEntityStreamOut.AsObject;
    static toObject(includeInstance: boolean, msg: ReplicatedEntityStreamOut): ReplicatedEntityStreamOut.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ReplicatedEntityStreamOut, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ReplicatedEntityStreamOut;
    static deserializeBinaryFromReader(message: ReplicatedEntityStreamOut, reader: jspb.BinaryReader): ReplicatedEntityStreamOut;
}

export namespace ReplicatedEntityStreamOut {
    export type AsObject = {
        reply?: ReplicatedEntityReply.AsObject,
        streamedMessage?: ReplicatedEntityStreamedMessage.AsObject,
        streamCancelledResponse?: ReplicatedEntityStreamCancelledResponse.AsObject,
        failure?: akkaserverless_component_component_pb.Failure.AsObject,
    }

    export enum MessageCase {
        MESSAGE_NOT_SET = 0,
        REPLY = 1,
        STREAMED_MESSAGE = 2,
        STREAM_CANCELLED_RESPONSE = 3,
        FAILURE = 4,
    }

}

export class ReplicatedEntityDelta extends jspb.Message { 

    hasGcounter(): boolean;
    clearGcounter(): void;
    getGcounter(): GCounterDelta | undefined;
    setGcounter(value?: GCounterDelta): ReplicatedEntityDelta;

    hasPncounter(): boolean;
    clearPncounter(): void;
    getPncounter(): PNCounterDelta | undefined;
    setPncounter(value?: PNCounterDelta): ReplicatedEntityDelta;

    hasGset(): boolean;
    clearGset(): void;
    getGset(): GSetDelta | undefined;
    setGset(value?: GSetDelta): ReplicatedEntityDelta;

    hasOrset(): boolean;
    clearOrset(): void;
    getOrset(): ORSetDelta | undefined;
    setOrset(value?: ORSetDelta): ReplicatedEntityDelta;

    hasLwwregister(): boolean;
    clearLwwregister(): void;
    getLwwregister(): LWWRegisterDelta | undefined;
    setLwwregister(value?: LWWRegisterDelta): ReplicatedEntityDelta;

    hasFlag(): boolean;
    clearFlag(): void;
    getFlag(): FlagDelta | undefined;
    setFlag(value?: FlagDelta): ReplicatedEntityDelta;

    hasOrmap(): boolean;
    clearOrmap(): void;
    getOrmap(): ORMapDelta | undefined;
    setOrmap(value?: ORMapDelta): ReplicatedEntityDelta;

    hasVote(): boolean;
    clearVote(): void;
    getVote(): VoteDelta | undefined;
    setVote(value?: VoteDelta): ReplicatedEntityDelta;

    getDeltaCase(): ReplicatedEntityDelta.DeltaCase;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ReplicatedEntityDelta.AsObject;
    static toObject(includeInstance: boolean, msg: ReplicatedEntityDelta): ReplicatedEntityDelta.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ReplicatedEntityDelta, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ReplicatedEntityDelta;
    static deserializeBinaryFromReader(message: ReplicatedEntityDelta, reader: jspb.BinaryReader): ReplicatedEntityDelta;
}

export namespace ReplicatedEntityDelta {
    export type AsObject = {
        gcounter?: GCounterDelta.AsObject,
        pncounter?: PNCounterDelta.AsObject,
        gset?: GSetDelta.AsObject,
        orset?: ORSetDelta.AsObject,
        lwwregister?: LWWRegisterDelta.AsObject,
        flag?: FlagDelta.AsObject,
        ormap?: ORMapDelta.AsObject,
        vote?: VoteDelta.AsObject,
    }

    export enum DeltaCase {
        DELTA_NOT_SET = 0,
        GCOUNTER = 1,
        PNCOUNTER = 2,
        GSET = 3,
        ORSET = 4,
        LWWREGISTER = 5,
        FLAG = 6,
        ORMAP = 7,
        VOTE = 8,
    }

}

export class GCounterDelta extends jspb.Message { 
    getIncrement(): number;
    setIncrement(value: number): GCounterDelta;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): GCounterDelta.AsObject;
    static toObject(includeInstance: boolean, msg: GCounterDelta): GCounterDelta.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: GCounterDelta, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): GCounterDelta;
    static deserializeBinaryFromReader(message: GCounterDelta, reader: jspb.BinaryReader): GCounterDelta;
}

export namespace GCounterDelta {
    export type AsObject = {
        increment: number,
    }
}

export class PNCounterDelta extends jspb.Message { 
    getChange(): number;
    setChange(value: number): PNCounterDelta;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): PNCounterDelta.AsObject;
    static toObject(includeInstance: boolean, msg: PNCounterDelta): PNCounterDelta.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: PNCounterDelta, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): PNCounterDelta;
    static deserializeBinaryFromReader(message: PNCounterDelta, reader: jspb.BinaryReader): PNCounterDelta;
}

export namespace PNCounterDelta {
    export type AsObject = {
        change: number,
    }
}

export class GSetDelta extends jspb.Message { 
    clearAddedList(): void;
    getAddedList(): Array<google_protobuf_any_pb.Any>;
    setAddedList(value: Array<google_protobuf_any_pb.Any>): GSetDelta;
    addAdded(value?: google_protobuf_any_pb.Any, index?: number): google_protobuf_any_pb.Any;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): GSetDelta.AsObject;
    static toObject(includeInstance: boolean, msg: GSetDelta): GSetDelta.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: GSetDelta, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): GSetDelta;
    static deserializeBinaryFromReader(message: GSetDelta, reader: jspb.BinaryReader): GSetDelta;
}

export namespace GSetDelta {
    export type AsObject = {
        addedList: Array<google_protobuf_any_pb.Any.AsObject>,
    }
}

export class ORSetDelta extends jspb.Message { 
    getCleared(): boolean;
    setCleared(value: boolean): ORSetDelta;
    clearRemovedList(): void;
    getRemovedList(): Array<google_protobuf_any_pb.Any>;
    setRemovedList(value: Array<google_protobuf_any_pb.Any>): ORSetDelta;
    addRemoved(value?: google_protobuf_any_pb.Any, index?: number): google_protobuf_any_pb.Any;
    clearAddedList(): void;
    getAddedList(): Array<google_protobuf_any_pb.Any>;
    setAddedList(value: Array<google_protobuf_any_pb.Any>): ORSetDelta;
    addAdded(value?: google_protobuf_any_pb.Any, index?: number): google_protobuf_any_pb.Any;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ORSetDelta.AsObject;
    static toObject(includeInstance: boolean, msg: ORSetDelta): ORSetDelta.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ORSetDelta, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ORSetDelta;
    static deserializeBinaryFromReader(message: ORSetDelta, reader: jspb.BinaryReader): ORSetDelta;
}

export namespace ORSetDelta {
    export type AsObject = {
        cleared: boolean,
        removedList: Array<google_protobuf_any_pb.Any.AsObject>,
        addedList: Array<google_protobuf_any_pb.Any.AsObject>,
    }
}

export class LWWRegisterDelta extends jspb.Message { 

    hasValue(): boolean;
    clearValue(): void;
    getValue(): google_protobuf_any_pb.Any | undefined;
    setValue(value?: google_protobuf_any_pb.Any): LWWRegisterDelta;
    getClock(): ReplicatedEntityClock;
    setClock(value: ReplicatedEntityClock): LWWRegisterDelta;
    getCustomClockValue(): number;
    setCustomClockValue(value: number): LWWRegisterDelta;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): LWWRegisterDelta.AsObject;
    static toObject(includeInstance: boolean, msg: LWWRegisterDelta): LWWRegisterDelta.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: LWWRegisterDelta, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): LWWRegisterDelta;
    static deserializeBinaryFromReader(message: LWWRegisterDelta, reader: jspb.BinaryReader): LWWRegisterDelta;
}

export namespace LWWRegisterDelta {
    export type AsObject = {
        value?: google_protobuf_any_pb.Any.AsObject,
        clock: ReplicatedEntityClock,
        customClockValue: number,
    }
}

export class FlagDelta extends jspb.Message { 
    getValue(): boolean;
    setValue(value: boolean): FlagDelta;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): FlagDelta.AsObject;
    static toObject(includeInstance: boolean, msg: FlagDelta): FlagDelta.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: FlagDelta, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): FlagDelta;
    static deserializeBinaryFromReader(message: FlagDelta, reader: jspb.BinaryReader): FlagDelta;
}

export namespace FlagDelta {
    export type AsObject = {
        value: boolean,
    }
}

export class ORMapDelta extends jspb.Message { 
    getCleared(): boolean;
    setCleared(value: boolean): ORMapDelta;
    clearRemovedList(): void;
    getRemovedList(): Array<google_protobuf_any_pb.Any>;
    setRemovedList(value: Array<google_protobuf_any_pb.Any>): ORMapDelta;
    addRemoved(value?: google_protobuf_any_pb.Any, index?: number): google_protobuf_any_pb.Any;
    clearUpdatedList(): void;
    getUpdatedList(): Array<ORMapEntryDelta>;
    setUpdatedList(value: Array<ORMapEntryDelta>): ORMapDelta;
    addUpdated(value?: ORMapEntryDelta, index?: number): ORMapEntryDelta;
    clearAddedList(): void;
    getAddedList(): Array<ORMapEntryDelta>;
    setAddedList(value: Array<ORMapEntryDelta>): ORMapDelta;
    addAdded(value?: ORMapEntryDelta, index?: number): ORMapEntryDelta;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ORMapDelta.AsObject;
    static toObject(includeInstance: boolean, msg: ORMapDelta): ORMapDelta.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ORMapDelta, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ORMapDelta;
    static deserializeBinaryFromReader(message: ORMapDelta, reader: jspb.BinaryReader): ORMapDelta;
}

export namespace ORMapDelta {
    export type AsObject = {
        cleared: boolean,
        removedList: Array<google_protobuf_any_pb.Any.AsObject>,
        updatedList: Array<ORMapEntryDelta.AsObject>,
        addedList: Array<ORMapEntryDelta.AsObject>,
    }
}

export class ORMapEntryDelta extends jspb.Message { 

    hasKey(): boolean;
    clearKey(): void;
    getKey(): google_protobuf_any_pb.Any | undefined;
    setKey(value?: google_protobuf_any_pb.Any): ORMapEntryDelta;

    hasDelta(): boolean;
    clearDelta(): void;
    getDelta(): ReplicatedEntityDelta | undefined;
    setDelta(value?: ReplicatedEntityDelta): ORMapEntryDelta;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ORMapEntryDelta.AsObject;
    static toObject(includeInstance: boolean, msg: ORMapEntryDelta): ORMapEntryDelta.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ORMapEntryDelta, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ORMapEntryDelta;
    static deserializeBinaryFromReader(message: ORMapEntryDelta, reader: jspb.BinaryReader): ORMapEntryDelta;
}

export namespace ORMapEntryDelta {
    export type AsObject = {
        key?: google_protobuf_any_pb.Any.AsObject,
        delta?: ReplicatedEntityDelta.AsObject,
    }
}

export class VoteDelta extends jspb.Message { 
    getSelfVote(): boolean;
    setSelfVote(value: boolean): VoteDelta;
    getVotesFor(): number;
    setVotesFor(value: number): VoteDelta;
    getTotalVoters(): number;
    setTotalVoters(value: number): VoteDelta;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): VoteDelta.AsObject;
    static toObject(includeInstance: boolean, msg: VoteDelta): VoteDelta.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: VoteDelta, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): VoteDelta;
    static deserializeBinaryFromReader(message: VoteDelta, reader: jspb.BinaryReader): VoteDelta;
}

export namespace VoteDelta {
    export type AsObject = {
        selfVote: boolean,
        votesFor: number,
        totalVoters: number,
    }
}

export class ReplicatedEntityInit extends jspb.Message { 
    getServiceName(): string;
    setServiceName(value: string): ReplicatedEntityInit;
    getEntityId(): string;
    setEntityId(value: string): ReplicatedEntityInit;

    hasDelta(): boolean;
    clearDelta(): void;
    getDelta(): ReplicatedEntityDelta | undefined;
    setDelta(value?: ReplicatedEntityDelta): ReplicatedEntityInit;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ReplicatedEntityInit.AsObject;
    static toObject(includeInstance: boolean, msg: ReplicatedEntityInit): ReplicatedEntityInit.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ReplicatedEntityInit, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ReplicatedEntityInit;
    static deserializeBinaryFromReader(message: ReplicatedEntityInit, reader: jspb.BinaryReader): ReplicatedEntityInit;
}

export namespace ReplicatedEntityInit {
    export type AsObject = {
        serviceName: string,
        entityId: string,
        delta?: ReplicatedEntityDelta.AsObject,
    }
}

export class ReplicatedEntityDelete extends jspb.Message { 

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ReplicatedEntityDelete.AsObject;
    static toObject(includeInstance: boolean, msg: ReplicatedEntityDelete): ReplicatedEntityDelete.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ReplicatedEntityDelete, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ReplicatedEntityDelete;
    static deserializeBinaryFromReader(message: ReplicatedEntityDelete, reader: jspb.BinaryReader): ReplicatedEntityDelete;
}

export namespace ReplicatedEntityDelete {
    export type AsObject = {
    }
}

export class ReplicatedEntityReply extends jspb.Message { 
    getCommandId(): number;
    setCommandId(value: number): ReplicatedEntityReply;

    hasClientAction(): boolean;
    clearClientAction(): void;
    getClientAction(): akkaserverless_component_component_pb.ClientAction | undefined;
    setClientAction(value?: akkaserverless_component_component_pb.ClientAction): ReplicatedEntityReply;
    clearSideEffectsList(): void;
    getSideEffectsList(): Array<akkaserverless_component_component_pb.SideEffect>;
    setSideEffectsList(value: Array<akkaserverless_component_component_pb.SideEffect>): ReplicatedEntityReply;
    addSideEffects(value?: akkaserverless_component_component_pb.SideEffect, index?: number): akkaserverless_component_component_pb.SideEffect;

    hasStateAction(): boolean;
    clearStateAction(): void;
    getStateAction(): ReplicatedEntityStateAction | undefined;
    setStateAction(value?: ReplicatedEntityStateAction): ReplicatedEntityReply;
    getStreamed(): boolean;
    setStreamed(value: boolean): ReplicatedEntityReply;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ReplicatedEntityReply.AsObject;
    static toObject(includeInstance: boolean, msg: ReplicatedEntityReply): ReplicatedEntityReply.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ReplicatedEntityReply, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ReplicatedEntityReply;
    static deserializeBinaryFromReader(message: ReplicatedEntityReply, reader: jspb.BinaryReader): ReplicatedEntityReply;
}

export namespace ReplicatedEntityReply {
    export type AsObject = {
        commandId: number,
        clientAction?: akkaserverless_component_component_pb.ClientAction.AsObject,
        sideEffectsList: Array<akkaserverless_component_component_pb.SideEffect.AsObject>,
        stateAction?: ReplicatedEntityStateAction.AsObject,
        streamed: boolean,
    }
}

export class ReplicatedEntityStateAction extends jspb.Message { 

    hasUpdate(): boolean;
    clearUpdate(): void;
    getUpdate(): ReplicatedEntityDelta | undefined;
    setUpdate(value?: ReplicatedEntityDelta): ReplicatedEntityStateAction;

    hasDelete(): boolean;
    clearDelete(): void;
    getDelete(): ReplicatedEntityDelete | undefined;
    setDelete(value?: ReplicatedEntityDelete): ReplicatedEntityStateAction;
    getWriteConsistency(): ReplicatedEntityWriteConsistency;
    setWriteConsistency(value: ReplicatedEntityWriteConsistency): ReplicatedEntityStateAction;

    getActionCase(): ReplicatedEntityStateAction.ActionCase;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ReplicatedEntityStateAction.AsObject;
    static toObject(includeInstance: boolean, msg: ReplicatedEntityStateAction): ReplicatedEntityStateAction.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ReplicatedEntityStateAction, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ReplicatedEntityStateAction;
    static deserializeBinaryFromReader(message: ReplicatedEntityStateAction, reader: jspb.BinaryReader): ReplicatedEntityStateAction;
}

export namespace ReplicatedEntityStateAction {
    export type AsObject = {
        update?: ReplicatedEntityDelta.AsObject,
        pb_delete?: ReplicatedEntityDelete.AsObject,
        writeConsistency: ReplicatedEntityWriteConsistency,
    }

    export enum ActionCase {
        ACTION_NOT_SET = 0,
        UPDATE = 1,
        DELETE = 2,
    }

}

export class ReplicatedEntityStreamedMessage extends jspb.Message { 
    getCommandId(): number;
    setCommandId(value: number): ReplicatedEntityStreamedMessage;

    hasClientAction(): boolean;
    clearClientAction(): void;
    getClientAction(): akkaserverless_component_component_pb.ClientAction | undefined;
    setClientAction(value?: akkaserverless_component_component_pb.ClientAction): ReplicatedEntityStreamedMessage;
    clearSideEffectsList(): void;
    getSideEffectsList(): Array<akkaserverless_component_component_pb.SideEffect>;
    setSideEffectsList(value: Array<akkaserverless_component_component_pb.SideEffect>): ReplicatedEntityStreamedMessage;
    addSideEffects(value?: akkaserverless_component_component_pb.SideEffect, index?: number): akkaserverless_component_component_pb.SideEffect;
    getEndStream(): boolean;
    setEndStream(value: boolean): ReplicatedEntityStreamedMessage;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ReplicatedEntityStreamedMessage.AsObject;
    static toObject(includeInstance: boolean, msg: ReplicatedEntityStreamedMessage): ReplicatedEntityStreamedMessage.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ReplicatedEntityStreamedMessage, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ReplicatedEntityStreamedMessage;
    static deserializeBinaryFromReader(message: ReplicatedEntityStreamedMessage, reader: jspb.BinaryReader): ReplicatedEntityStreamedMessage;
}

export namespace ReplicatedEntityStreamedMessage {
    export type AsObject = {
        commandId: number,
        clientAction?: akkaserverless_component_component_pb.ClientAction.AsObject,
        sideEffectsList: Array<akkaserverless_component_component_pb.SideEffect.AsObject>,
        endStream: boolean,
    }
}

export class ReplicatedEntityStreamCancelledResponse extends jspb.Message { 
    getCommandId(): number;
    setCommandId(value: number): ReplicatedEntityStreamCancelledResponse;
    clearSideEffectsList(): void;
    getSideEffectsList(): Array<akkaserverless_component_component_pb.SideEffect>;
    setSideEffectsList(value: Array<akkaserverless_component_component_pb.SideEffect>): ReplicatedEntityStreamCancelledResponse;
    addSideEffects(value?: akkaserverless_component_component_pb.SideEffect, index?: number): akkaserverless_component_component_pb.SideEffect;

    hasStateAction(): boolean;
    clearStateAction(): void;
    getStateAction(): ReplicatedEntityStateAction | undefined;
    setStateAction(value?: ReplicatedEntityStateAction): ReplicatedEntityStreamCancelledResponse;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ReplicatedEntityStreamCancelledResponse.AsObject;
    static toObject(includeInstance: boolean, msg: ReplicatedEntityStreamCancelledResponse): ReplicatedEntityStreamCancelledResponse.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ReplicatedEntityStreamCancelledResponse, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ReplicatedEntityStreamCancelledResponse;
    static deserializeBinaryFromReader(message: ReplicatedEntityStreamCancelledResponse, reader: jspb.BinaryReader): ReplicatedEntityStreamCancelledResponse;
}

export namespace ReplicatedEntityStreamCancelledResponse {
    export type AsObject = {
        commandId: number,
        sideEffectsList: Array<akkaserverless_component_component_pb.SideEffect.AsObject>,
        stateAction?: ReplicatedEntityStateAction.AsObject,
    }
}

export enum ReplicatedEntityWriteConsistency {
    REPLICATED_ENTITY_WRITE_CONSISTENCY_LOCAL_UNSPECIFIED = 0,
    REPLICATED_ENTITY_WRITE_CONSISTENCY_MAJORITY = 1,
    REPLICATED_ENTITY_WRITE_CONSISTENCY_ALL = 2,
}

export enum ReplicatedEntityClock {
    REPLICATED_ENTITY_CLOCK_DEFAULT_UNSPECIFIED = 0,
    REPLICATED_ENTITY_CLOCK_REVERSE = 1,
    REPLICATED_ENTITY_CLOCK_CUSTOM = 2,
    REPLICATED_ENTITY_CLOCK_CUSTOM_AUTO_INCREMENT = 3,
}
